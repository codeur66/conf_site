version: 2
jobs:
  build:
    docker:
      - image: circleci/python:3.5.5-stretch
        environment:
          ANSIBLE_ASK_VAULT_PASS: False
          CC_TEST_REPORTER_ID: cf5093a40c8088ad26a5aca3e968037f90076dcbc825e5d10187dc3c81166e1a
          DJANGO_SETTINGS_MODULE: "conf_site.settings.testing"
          PGHOST: 127.0.0.1
          PYTHONWARNINGS: all
      - image: circleci/postgres:9.6.10
        environment:
          POSTGRES_USER: circleci
          POSTGRES_DB: testing
      - image: redis:3.2.6
    working_directory: ~/repo
    steps:
      - checkout
      # Download and cache dependencies.
      - restore_cache:
          keys:
          - v1-python-dependencies-{{ checksum "requirements/development.txt" }}-{{ checksum "requirements/production.txt" }}
      - run:
          name: install dependencies
          command: |
            mkdir -p ~/venv
            virtualenv ~/venv
            . ~/venv/bin/activate
            pip install -r requirements/development.txt
      - save_cache:
          paths:
            - ~/venv
          key: v1-python-dependencies-{{ checksum "requirements/development.txt" }}-{{ checksum "requirements/production.txt" }}
      - run:
          name: check for missing migrations
          command: |
            . ~/venv/bin/activate
            ./manage.py makemigrations --check
      - run:
          name: configure static files
          command: |
            . ~/venv/bin/activate
            ./manage.py collectstatic --noinput
      - run:
          name: run code linting
          command: |
            . ~/venv/bin/activate
            flake8 --exclude=ansible,docs,migrations .
      - run:
          name: run documentation linting
          command: |
            . ~/venv/bin/activate
            rstcheck --report warning docs/source/*.rst
      - run:
          name: run Ansible linting
          command: |
            . ~/venv/bin/activate
            ansible-lint ansible/tasks/bootstrap.yml
            ansible-lint ansible/development.yml
            ansible-lint ansible/testing.yml
            ansible-lint ansible/staging.yml
            ansible-lint ansible/production.yml
      - run:
          name: run Ansible tasks used for testing
          command: |
            . ~/venv/bin/activate
            ansible-playbook -i ansible/hosts -l testing --connection=local --tags testing ansible/testing.yml
      - run:
          name: download CodeClimate test reporter utility
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: run automated tests
          command: |
            ./cc-test-reporter before-build
            . ~/venv/bin/activate
            coverage run --source='.' manage.py test --noinput
            coverage xml
            ./cc-test-reporter after-build --coverage-input-type coverage.py --exit-code $?
      - store_artifacts:
          path: test-reports
          destination: test-reports
